name: Deploy to 'Timeweb' server

on:
  push:
    branches:
      - prod  # Деплой запускается при пуше в main

env:
  MINIO_ROOT_USER: ${{vars.MINIO_ROOT_USER}}
  MINIO_ROOT_PASSWORD: ${{vars.MINIO_ROOT_PASSWORD}}
  SINK_URI: ${{vars.SINK_URI}}
  PRODUCER_LOGGER_TOKEN: ${{secrets.PRODUCER_LOGGER_TOKEN}}
  EXECUTOR_LOGGER_TOKEN: ${{secrets.EXECUTOR_LOGGER_TOKEN}}
  RABBITMQ_LOGGER_TOKEN: ${{secrets.RABBITMQ_LOGGER_TOKEN}}
  MINIO_LOGGER_TOKEN: ${{secrets.MINIO_LOGGER_TOKEN}}
  NGINX_LOGGER_TOKEN: ${{secrets.NGINX_LOGGER_TOKEN}}
  RABBITMQ_DEFAULT_USER: ${{ vars.RABBITMQ_DEFAULT_USER}}
  RABBITMQ_DEFAULT_PASS: ${{vars.RABBITMQ_DEFAULT_PASS}}
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1  # Уменьшаем глубину клонирования

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.TIMEWEB }}

    - name: Add server to known_hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H 154.194.53.158 >> ~/.ssh/known_hosts  # Получаем и добавляем ключ сервера

    - name: Copy files to server
      run: |
        # scp -r . root@154.194.53.158:~/projects/Aquamarine
        rsync -avz --delete ./ root@154.194.53.158:~/projects/Aquamarine
    
    - name: Check environment variables
      run: |
        echo "SINK_URI: $SINK_URI"
        echo "PRODUCER_LOGGER_TOKEN: $PRODUCER_LOGGER_TOKEN" 
      
    - name: Restart Docker Compose
      run: |
        ssh root@154.194.53.158 << 'ENDSSH'
          cd ~/projects/Aquamarine/src       
          docker-compose stop web-producer web-executor
          docker-compose up -d --build web-producer web-executor
          docker image prune -f
        