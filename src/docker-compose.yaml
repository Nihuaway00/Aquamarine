networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  minio_data:
    driver: local
  rabbitmq_data:
    driver: local

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/default.conf.template:/etc/nginx/templates/default.conf.template:ro
    environment:
      - MINIO_HOST=filestorage
      - MINIO_PORT=9000
      - FRONTEND_HOST=app
      - FRONTEND_PORT=3000
      - BACKEND_HOST=backend
      - BACKEND_PORT=3001
    networks:
      - backend
      - frontend
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80

  app:
    hostname: app
    container_name: app
    ports:
      - 6000:3000
    networks:
      - frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://localhost/api

  backend:
    container_name: backend
    hostname: backend
    build: ./backend/producer
    ports:
      - 5001:3001
    environment:
      - PORT=3001
      - RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@queue:5672
      - RABBITMQ_QUEUE=tasks
    depends_on: [backend-executor]
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 100M


  backend-executor:
    build: ./backend/executor
    environment:
      - RABBITMQ_URL=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@queue:5672
      - RABBITMQ_QUEUE=tasks
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - MINIO_SERVER_HOST=filestorage
      - MINIO_DEFAULT_BUCKETS=processed-files
      - MINIO_PORT=9000
    deploy:
      replicas: 1
      resources:
        limits:
          memory: 100M
    depends_on:
      rabbitmq:
          condition: service_healthy
      minio:
        condition: service_started
    networks:
      - backend

  rabbitmq:
    container_name: queue
    image: rabbitmq:3.13.3
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - backend
    depends_on:
      logger:
        condition: service_healthy
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s 
    ulimits:  # Ограничения на уровне операционной системы
      nofile:
        soft: 2048
        hard: 4096

  minio:
    container_name: filestorage
    image: bitnami/minio:latest
    init: true
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - TZ=Europe/Moscow
      - MINIO_DEFAULT_BUCKETS=processed-files
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SKIP_CLIENT=yes
    volumes:
      - 'minio_data:/bitnami/minio/data'
    networks:
      - backend
    depends_on:
      logger:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 200M

  logger:
    container_name: logger
    image: timberio/vector:nightly-alpine
    volumes:
      - ./logger/vector.yaml:/etc/vector/vector.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - SINK_URI=${SINK_URI}
      - PRODUCER_TOKEN=${PRODUCER_LOGGER_TOKEN}
      - EXECUTOR_TOKEN=${EXECUTOR_LOGGER_TOKEN}
      - RABBITMQ_TOKEN=${RABBITMQ_LOGGER_TOKEN}
      - MINIO_TOKEN=${MINIO_LOGGER_TOKEN}
      - NGINX_TOKEN=${NGINX_LOGGER_TOKEN}
    ports:
      - "8686:8686"
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "vector", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s 

