networks:
  backend:
    driver: bridge
  frontend:
    driver: bridge

volumes:
  minio_data:
    driver: local
  rabbitmq_data:
    driver: local

services:
  nginx:
    build: ./nginx
    container_name: nginx
    networks:
      - backend
      - frontend
    ports:
      - '80:80'
    depends_on:
      - web-producer
  web-producer:
    container_name: nestjs-producer
    build: ./backend/producer
    environment:
      - PORT=3000
      - MYSQL_HOST=mysql_database
      - MYSQL_PORT=3306
      - RABBITMQ_URL=amqp://rabbitmq-queue:5672
      - RABBITMQ_QUEUE=tasks
      - LOGTAIL_TOKEN=${PRODUCER_LOGTAIL_TOKEN}
      - CORS_ORIGIN=http://localhost:5173
    hostname: web-producer
    depends_on:
      rabbitmq:
          condition: service_healthy
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 100M


  web-executor:
    build: ./backend/executor
    environment:
      - MYSQL_HOST=mysql_database
      - MYSQL_PORT=3306
      - RABBITMQ_URL=amqp://rabbitmq-queue
      - RABBITMQ_QUEUE=tasks
      - LOGTAIL_TOKEN=${EXECUTOR_LOGTAIL_TOKEN}
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SERVER_HOST=minio-filestorage
      - MINIO_DEFAULT_BUCKETS=processed-files
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 100M
    depends_on:
      rabbitmq:
          condition: service_healthy
    networks:
      - backend


  # mysql:
  #   image: mysql:latest
  #   container_name: mysql-database
  #   environment:
  #     - MYSQL_DATABASE=nestjs
  #     - MYSQL_ROOT_PASSWORD=root
  #   ports:
  #     - 3306:3306
  #   networks:
  #     - backend


  rabbitmq:
    image: rabbitmq:3.13.3
    container_name: rabbitmq-queue
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    command: >
      sh -c "rabbitmq-plugins enable rabbitmq_management &&  # Включает веб-интерфейс управления
            echo 'vm_memory_high_watermark.relative = 0.3' > /etc/rabbitmq/conf.d/10-defaults.conf &&  # Записывает настройку памяти в конфиг
            rabbitmq-server"  # Запускает сервер
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s 
    ulimits:  # Ограничения на уровне операционной системы
      nofile:  # Максимальное количество открытых файловых дескрипторов
        soft: 2048  # Мягкий лимит, который процесс может превысить временно
        hard: 4096  # Жесткий лимит, который процесс не может превысить

  minio:
    image: bitnami/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_DEFAULT_BUCKETS=processed-files
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_SKIP_CLIENT=yes
    container_name: minio-filestorage
    volumes:
      - 'minio_data:/bitnami/minio/data'
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 200M
