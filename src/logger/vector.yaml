api:
  enabled: true

sources:
  docker:
    type: docker_logs
    exclude_containers:
      - logger

transforms:
  betterstack_transform:
    type: remap
    inputs:
      - docker
    source: |
      .dt = del(.timestamp)

  parse_nestjs:
    type: remap
    inputs:
      - betterstack_transform
    source: |
      .parsed = parse_json(.message) ?? null
      
      if exists(.parsed) {
        if exists(.parsed.msg) {
          .message = .parsed.msg
        }
      }


  frontend_filter:
    type: filter
    inputs: 
      - parse_nestjs
    condition: '.container_name == "app"'
  producer_filter:
    type: filter
    inputs: 
      - parse_nestjs
    condition: '.container_name == "backend"'
  executor_filter:
    type: filter
    inputs: 
      - parse_nestjs
    condition: '.container_name == "src-backend-executor-1"'
  rabbitmq_filter:
    type: filter
    inputs: 
      - betterstack_transform
    condition: '.container_name == "queue"'
  minio_filter:
    type: filter
    inputs: 
      - betterstack_transform
    condition: '.container_name == "filestorage"'
  nginx_filter:
    type: filter
    inputs: 
      - betterstack_transform
    condition: '.container_name == "nginx"'

sinks:
  frontend_logs:
    type: http
    inputs:
      - frontend_filter
    uri: ${SINK_URI}
    encoding:
      codec: json
    auth:
      strategy: bearer
      token: ${FRONTEND_TOKEN}
  producer_logs:
    type: http
    inputs:
      - producer_filter
    uri: ${SINK_URI}
    encoding:
      codec: json
    auth:
      strategy: bearer
      token: ${PRODUCER_TOKEN}
  executor_logs:
    type: http
    inputs:
      - executor_filter
    uri: ${SINK_URI}
    encoding:
      codec: json
    auth:
      strategy: bearer
      token: ${EXECUTOR_TOKEN}
  rabbitmq_logs:
    type: http
    inputs:
      - rabbitmq_filter
    uri: ${SINK_URI}
    encoding:
      codec: json
    auth:
      strategy: bearer
      token: ${RABBITMQ_TOKEN}
  minio_logs:
    type: http
    inputs:
      - minio_filter
    uri: ${SINK_URI}
    encoding:
      codec: json
    auth:
      strategy: bearer
      token: ${MINIO_TOKEN}
  nginx_logs:
    type: http
    inputs:
      - nginx_filter
    uri: ${SINK_URI}
    encoding:
      codec: json
    auth:
      strategy: bearer
      token: ${NGINX_TOKEN}